//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBAdapter.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WEBIEIEntities : DbContext
    {
        public WEBIEIEntities()
            : base("name=WEBIEIEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<IEI_TBL_FILE_TYPES> IEI_TBL_FILE_TYPES { get; set; }
        public virtual DbSet<IEI_TBL_FILE_UPLOAD_VS_MEMB_APP> IEI_TBL_FILE_UPLOAD_VS_MEMB_APP { get; set; }
        public virtual DbSet<IEI_TBL_FILE_UPLOADED> IEI_TBL_FILE_UPLOADED { get; set; }
        public virtual DbSet<IEI_TBL_FRTH_EVENT> IEI_TBL_FRTH_EVENT { get; set; }
        public virtual DbSet<IEI_TBL_TECH_ASSOCIATE> IEI_TBL_TECH_ASSOCIATE { get; set; }
        public virtual DbSet<IEI_TBL_TECH_DIVISION_MAST> IEI_TBL_TECH_DIVISION_MAST { get; set; }
        public virtual DbSet<IEI_TBL_TECH_PROG_HD> IEI_TBL_TECH_PROG_HD { get; set; }
        public virtual DbSet<IEI_TBL_TECH_PROPOSAL> IEI_TBL_TECH_PROPOSAL { get; set; }
        public virtual DbSet<IEI_TBL_TECH_SCHEDULE> IEI_TBL_TECH_SCHEDULE { get; set; }
        public virtual DbSet<IEI_TBL_CENTMAST> IEI_TBL_CENTMAST { get; set; }
    
        public virtual ObjectResult<SP_Sync_MembData_Result> SP_Sync_MembData1(string rECSLNO, string oLDMEMBCODE, string nEWMEMBCODE, string pARTYCODE, string mEMB_IDENTITY, Nullable<int> lOGIN_ID, string pARTY_NAME, string sALUTATION, string sFX, string aDD1, string aDD2, string aDD3, string aDD4, string aDD5, string pIN, string nATIONALITY, string cOUNTRY_RESIDENCE, string gENDER, string mOBILE, string eMAIL, string pHONE, Nullable<System.DateTime> dOB, string cENTRE, string dIVISION, string sUBSCRIPTION_CATEGORY, Nullable<System.DateTime> eNROLEMENT_START_DT, Nullable<System.DateTime> eNROLEMENT_END_DT, Nullable<System.DateTime> sUBSCRIPTION_END_DT, string mEMB_CATEGORY, string rEG_CAT, string mEMB_TYPE, Nullable<System.DateTime> gENERATE_DATE, Nullable<System.DateTime> uPLOAD_DATE, string wEB_UPDT_FLG, string cL, string rEMARKS)
        {
            var rECSLNOParameter = rECSLNO != null ?
                new ObjectParameter("RECSLNO", rECSLNO) :
                new ObjectParameter("RECSLNO", typeof(string));
    
            var oLDMEMBCODEParameter = oLDMEMBCODE != null ?
                new ObjectParameter("OLDMEMBCODE", oLDMEMBCODE) :
                new ObjectParameter("OLDMEMBCODE", typeof(string));
    
            var nEWMEMBCODEParameter = nEWMEMBCODE != null ?
                new ObjectParameter("NEWMEMBCODE", nEWMEMBCODE) :
                new ObjectParameter("NEWMEMBCODE", typeof(string));
    
            var pARTYCODEParameter = pARTYCODE != null ?
                new ObjectParameter("PARTYCODE", pARTYCODE) :
                new ObjectParameter("PARTYCODE", typeof(string));
    
            var mEMB_IDENTITYParameter = mEMB_IDENTITY != null ?
                new ObjectParameter("MEMB_IDENTITY", mEMB_IDENTITY) :
                new ObjectParameter("MEMB_IDENTITY", typeof(string));
    
            var lOGIN_IDParameter = lOGIN_ID.HasValue ?
                new ObjectParameter("LOGIN_ID", lOGIN_ID) :
                new ObjectParameter("LOGIN_ID", typeof(int));
    
            var pARTY_NAMEParameter = pARTY_NAME != null ?
                new ObjectParameter("PARTY_NAME", pARTY_NAME) :
                new ObjectParameter("PARTY_NAME", typeof(string));
    
            var sALUTATIONParameter = sALUTATION != null ?
                new ObjectParameter("SALUTATION", sALUTATION) :
                new ObjectParameter("SALUTATION", typeof(string));
    
            var sFXParameter = sFX != null ?
                new ObjectParameter("SFX", sFX) :
                new ObjectParameter("SFX", typeof(string));
    
            var aDD1Parameter = aDD1 != null ?
                new ObjectParameter("ADD1", aDD1) :
                new ObjectParameter("ADD1", typeof(string));
    
            var aDD2Parameter = aDD2 != null ?
                new ObjectParameter("ADD2", aDD2) :
                new ObjectParameter("ADD2", typeof(string));
    
            var aDD3Parameter = aDD3 != null ?
                new ObjectParameter("ADD3", aDD3) :
                new ObjectParameter("ADD3", typeof(string));
    
            var aDD4Parameter = aDD4 != null ?
                new ObjectParameter("ADD4", aDD4) :
                new ObjectParameter("ADD4", typeof(string));
    
            var aDD5Parameter = aDD5 != null ?
                new ObjectParameter("ADD5", aDD5) :
                new ObjectParameter("ADD5", typeof(string));
    
            var pINParameter = pIN != null ?
                new ObjectParameter("PIN", pIN) :
                new ObjectParameter("PIN", typeof(string));
    
            var nATIONALITYParameter = nATIONALITY != null ?
                new ObjectParameter("NATIONALITY", nATIONALITY) :
                new ObjectParameter("NATIONALITY", typeof(string));
    
            var cOUNTRY_RESIDENCEParameter = cOUNTRY_RESIDENCE != null ?
                new ObjectParameter("COUNTRY_RESIDENCE", cOUNTRY_RESIDENCE) :
                new ObjectParameter("COUNTRY_RESIDENCE", typeof(string));
    
            var gENDERParameter = gENDER != null ?
                new ObjectParameter("GENDER", gENDER) :
                new ObjectParameter("GENDER", typeof(string));
    
            var mOBILEParameter = mOBILE != null ?
                new ObjectParameter("MOBILE", mOBILE) :
                new ObjectParameter("MOBILE", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var pHONEParameter = pHONE != null ?
                new ObjectParameter("PHONE", pHONE) :
                new ObjectParameter("PHONE", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var cENTREParameter = cENTRE != null ?
                new ObjectParameter("CENTRE", cENTRE) :
                new ObjectParameter("CENTRE", typeof(string));
    
            var dIVISIONParameter = dIVISION != null ?
                new ObjectParameter("DIVISION", dIVISION) :
                new ObjectParameter("DIVISION", typeof(string));
    
            var sUBSCRIPTION_CATEGORYParameter = sUBSCRIPTION_CATEGORY != null ?
                new ObjectParameter("SUBSCRIPTION_CATEGORY", sUBSCRIPTION_CATEGORY) :
                new ObjectParameter("SUBSCRIPTION_CATEGORY", typeof(string));
    
            var eNROLEMENT_START_DTParameter = eNROLEMENT_START_DT.HasValue ?
                new ObjectParameter("ENROLEMENT_START_DT", eNROLEMENT_START_DT) :
                new ObjectParameter("ENROLEMENT_START_DT", typeof(System.DateTime));
    
            var eNROLEMENT_END_DTParameter = eNROLEMENT_END_DT.HasValue ?
                new ObjectParameter("ENROLEMENT_END_DT", eNROLEMENT_END_DT) :
                new ObjectParameter("ENROLEMENT_END_DT", typeof(System.DateTime));
    
            var sUBSCRIPTION_END_DTParameter = sUBSCRIPTION_END_DT.HasValue ?
                new ObjectParameter("SUBSCRIPTION_END_DT", sUBSCRIPTION_END_DT) :
                new ObjectParameter("SUBSCRIPTION_END_DT", typeof(System.DateTime));
    
            var mEMB_CATEGORYParameter = mEMB_CATEGORY != null ?
                new ObjectParameter("MEMB_CATEGORY", mEMB_CATEGORY) :
                new ObjectParameter("MEMB_CATEGORY", typeof(string));
    
            var rEG_CATParameter = rEG_CAT != null ?
                new ObjectParameter("REG_CAT", rEG_CAT) :
                new ObjectParameter("REG_CAT", typeof(string));
    
            var mEMB_TYPEParameter = mEMB_TYPE != null ?
                new ObjectParameter("MEMB_TYPE", mEMB_TYPE) :
                new ObjectParameter("MEMB_TYPE", typeof(string));
    
            var gENERATE_DATEParameter = gENERATE_DATE.HasValue ?
                new ObjectParameter("GENERATE_DATE", gENERATE_DATE) :
                new ObjectParameter("GENERATE_DATE", typeof(System.DateTime));
    
            var uPLOAD_DATEParameter = uPLOAD_DATE.HasValue ?
                new ObjectParameter("UPLOAD_DATE", uPLOAD_DATE) :
                new ObjectParameter("UPLOAD_DATE", typeof(System.DateTime));
    
            var wEB_UPDT_FLGParameter = wEB_UPDT_FLG != null ?
                new ObjectParameter("WEB_UPDT_FLG", wEB_UPDT_FLG) :
                new ObjectParameter("WEB_UPDT_FLG", typeof(string));
    
            var cLParameter = cL != null ?
                new ObjectParameter("CL", cL) :
                new ObjectParameter("CL", typeof(string));
    
            var rEMARKSParameter = rEMARKS != null ?
                new ObjectParameter("REMARKS", rEMARKS) :
                new ObjectParameter("REMARKS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Sync_MembData_Result>("SP_Sync_MembData1", rECSLNOParameter, oLDMEMBCODEParameter, nEWMEMBCODEParameter, pARTYCODEParameter, mEMB_IDENTITYParameter, lOGIN_IDParameter, pARTY_NAMEParameter, sALUTATIONParameter, sFXParameter, aDD1Parameter, aDD2Parameter, aDD3Parameter, aDD4Parameter, aDD5Parameter, pINParameter, nATIONALITYParameter, cOUNTRY_RESIDENCEParameter, gENDERParameter, mOBILEParameter, eMAILParameter, pHONEParameter, dOBParameter, cENTREParameter, dIVISIONParameter, sUBSCRIPTION_CATEGORYParameter, eNROLEMENT_START_DTParameter, eNROLEMENT_END_DTParameter, sUBSCRIPTION_END_DTParameter, mEMB_CATEGORYParameter, rEG_CATParameter, mEMB_TYPEParameter, gENERATE_DATEParameter, uPLOAD_DATEParameter, wEB_UPDT_FLGParameter, cLParameter, rEMARKSParameter);
        }
    }
}
